{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio\\\\task-manager-app\\\\src\\\\components\\\\TaskBoard.js\";\nimport React from 'react';\nimport { Grid, Paper, Typography, Box } from '@mui/material';\nimport { Droppable } from 'react-beautiful-dnd';\nimport TaskCard from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = ({\n  tasks,\n  columns,\n  onDeleteTask,\n  onUpdateTask\n}) => {\n  const getTasksByStatus = status => {\n    return tasks.filter(task => task.status === status);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 3,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          p: 2,\n          minHeight: '70vh',\n          bgcolor: 'background.paper',\n          borderTop: `4px solid ${column.color}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              color: column.color,\n              fontWeight: 'bold'\n            },\n            children: column.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              bgcolor: column.color,\n              color: 'white',\n              px: 1,\n              py: 0.5,\n              borderRadius: '12px',\n              fontSize: '0.75rem'\n            },\n            children: getTasksByStatus(column.id).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: column.id,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Box, {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            sx: {\n              minHeight: '60vh',\n              bgcolor: snapshot.isDraggingOver ? 'action.hover' : 'transparent',\n              borderRadius: 1,\n              transition: 'background-color 0.2s ease',\n              p: 1\n            },\n            children: [getTasksByStatus(column.id).map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task,\n              index: index,\n              onDelete: onDeleteTask,\n              onUpdate: onUpdateTask\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)), provided.placeholder, getTasksByStatus(column.id).length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '200px',\n                color: 'text.secondary',\n                fontStyle: 'italic'\n              },\n              children: \"Aucune t\\xE2che\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)\n    }, column.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","Grid","Paper","Typography","Box","Droppable","TaskCard","jsxDEV","_jsxDEV","TaskBoard","tasks","columns","onDeleteTask","onUpdateTask","getTasksByStatus","status","filter","task","container","spacing","children","Object","values","map","column","item","xs","sm","md","elevation","sx","p","minHeight","bgcolor","borderTop","color","mb","display","alignItems","justifyContent","variant","fontWeight","title","fileName","_jsxFileName","lineNumber","columnNumber","px","py","borderRadius","fontSize","id","length","droppableId","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","transition","index","onDelete","onUpdate","placeholder","height","fontStyle","_c","$RefreshReg$"],"sources":["E:/portfolio/task-manager-app/src/components/TaskBoard.js"],"sourcesContent":["import React from 'react';\r\nimport { Grid, Paper, Typography, Box } from '@mui/material';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport TaskCard from './TaskCard';\r\n\r\nconst TaskBoard = ({ tasks, columns, onDeleteTask, onUpdateTask }) => {\r\n  const getTasksByStatus = (status) => {\r\n    return tasks.filter(task => task.status === status);\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {Object.values(columns).map((column) => (\r\n        <Grid item xs={12} sm={6} md={3} key={column.id}>\r\n          <Paper\r\n            elevation={2}\r\n            sx={{\r\n              p: 2,\r\n              minHeight: '70vh',\r\n              bgcolor: 'background.paper',\r\n              borderTop: `4px solid ${column.color}`\r\n            }}\r\n          >\r\n            <Box sx={{ mb: 2, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n              <Typography variant=\"h6\" sx={{ color: column.color, fontWeight: 'bold' }}>\r\n                {column.title}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{\r\n                  bgcolor: column.color,\r\n                  color: 'white',\r\n                  px: 1,\r\n                  py: 0.5,\r\n                  borderRadius: '12px',\r\n                  fontSize: '0.75rem'\r\n                }}\r\n              >\r\n                {getTasksByStatus(column.id).length}\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Droppable droppableId={column.id}>\r\n              {(provided, snapshot) => (\r\n                <Box\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  sx={{\r\n                    minHeight: '60vh',\r\n                    bgcolor: snapshot.isDraggingOver ? 'action.hover' : 'transparent',\r\n                    borderRadius: 1,\r\n                    transition: 'background-color 0.2s ease',\r\n                    p: 1\r\n                  }}\r\n                >\r\n                  {getTasksByStatus(column.id).map((task, index) => (\r\n                    <TaskCard\r\n                      key={task.id}\r\n                      task={task}\r\n                      index={index}\r\n                      onDelete={onDeleteTask}\r\n                      onUpdate={onUpdateTask}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  \r\n                  {getTasksByStatus(column.id).length === 0 && (\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        height: '200px',\r\n                        color: 'text.secondary',\r\n                        fontStyle: 'italic'\r\n                      }}\r\n                    >\r\n                      Aucune t√¢che\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </Droppable>\r\n          </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}