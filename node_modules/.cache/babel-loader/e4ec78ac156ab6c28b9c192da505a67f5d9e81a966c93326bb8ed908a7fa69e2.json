{"ast":null,"code":"var _jsxFileName = \"E:\\\\portfolio\\\\task-manager-app\\\\src\\\\components\\\\TaskBoard.js\";\nimport React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport TaskCard from './TaskCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = ({\n  tasks,\n  columns,\n  onDeleteTask,\n  onUpdateTask\n}) => {\n  const getTasksByStatus = status => {\n    return tasks.filter(task => task.status === status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row g-4\",\n    children: Object.values(columns).map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-3 col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-header text-center\",\n          style: {\n            backgroundColor: column.bgColor\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-0 d-flex align-items-center justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge bg-white text-dark rounded-pill\",\n              children: getTasksByStatus(column.id).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: column.id,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: `kanban-body drop-zone ${snapshot.isDraggingOver ? 'drag-over' : ''}`,\n            children: [getTasksByStatus(column.id).map((task, index) => /*#__PURE__*/_jsxDEV(TaskCard, {\n              task: task,\n              index: index,\n              onDelete: onDeleteTask,\n              onUpdate: onUpdateTask\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)), provided.placeholder, getTasksByStatus(column.id).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bi bi-inbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Aucune t\\xE2che\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, column.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","Droppable","TaskCard","jsxDEV","_jsxDEV","TaskBoard","tasks","columns","onDeleteTask","onUpdateTask","getTasksByStatus","status","filter","task","className","children","Object","values","map","column","style","backgroundColor","bgColor","title","fileName","_jsxFileName","lineNumber","columnNumber","id","length","droppableId","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","index","onDelete","onUpdate","placeholder","_c","$RefreshReg$"],"sources":["E:/portfolio/task-manager-app/src/components/TaskBoard.js"],"sourcesContent":["import React from 'react';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\nimport TaskCard from './TaskCard';\r\n\r\nconst TaskBoard = ({ tasks, columns, onDeleteTask, onUpdateTask }) => {\r\n  const getTasksByStatus = (status) => {\r\n    return tasks.filter(task => task.status === status);\r\n  };\r\n\r\n  return (\r\n    <div className=\"row g-4\">\r\n      {Object.values(columns).map((column) => (\r\n        <div key={column.id} className=\"col-lg-3 col-md-6\">\r\n          <div className=\"kanban-column\">\r\n            {/* En-tête de colonne */}\r\n            <div \r\n              className=\"kanban-header text-center\"\r\n              style={{ backgroundColor: column.bgColor }}\r\n            >\r\n              <h5 className=\"mb-0 d-flex align-items-center justify-content-between\">\r\n                <span>{column.title}</span>\r\n                <span className=\"badge bg-white text-dark rounded-pill\">\r\n                  {getTasksByStatus(column.id).length}\r\n                </span>\r\n              </h5>\r\n            </div>\r\n\r\n            {/* Corps de colonne avec zone de drop */}\r\n            <Droppable droppableId={column.id} key={column.id}>\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className={`kanban-body drop-zone ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                >\r\n                  {getTasksByStatus(column.id).map((task, index) => (\r\n                    <TaskCard\r\n                      key={task.id}\r\n                      task={task}\r\n                      index={index}\r\n                      onDelete={onDeleteTask}\r\n                      onUpdate={onUpdateTask}\r\n                    />\r\n                  ))}\r\n                  {provided.placeholder}\r\n                  \r\n                  {/* État vide */}\r\n                  {getTasksByStatus(column.id).length === 0 && (\r\n                    <div className=\"empty-state\">\r\n                      <i className=\"bi bi-inbox\"></i>\r\n                      <div>Aucune tâche</div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}